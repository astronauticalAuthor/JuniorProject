digraph G{
 rankdir=BT;
OutputStreamWriter [shape="record"
label="{OutputStreamWriter|-se : StreamEncoder\l
|+OutputStreamWriter(OutputStream,String) : void\l
+OutputStreamWriter(OutputStream) : void\l
+OutputStreamWriter(OutputStream,Charset) : void\l
+OutputStreamWriter(OutputStream,CharsetEncoder) : void\l
+getEncoding() : String\l
flushBuffer() : void\l
+write(int) : void\l
+write(char[],int,int) : void\l
+write(String,int,int) : void\l
+flush() : void\l
+close() : void\l
}"
];
OutputStreamWriter -> Writer[arrowhead="onormal", style="solid"];
Writer [shape="record"
label="{Writer|-writeBuffer : char[]\l
-WRITE_BUFFER_SIZE : int\l
#lock : Object\l
|#Writer() : void\l
#Writer(Object) : void\l
+write(int) : void\l
+write(char[]) : void\l
+write(char[],int,int) : void\l
+write(String) : void\l
+write(String,int,int) : void\l
+append(CharSequence) : Writer\l
+append(CharSequence,int,int) : Writer\l
+append(char) : Writer\l
+flush() : void\l
+close() : void\l
+append(char) : Appendable\l
+append(CharSequence,int,int) : Appendable\l
+append(CharSequence) : Appendable\l
}"
];
Writer -> Appendable[arrowhead="onormal", style="dashed"];
Writer -> Closeable[arrowhead="onormal", style="dashed"];
Writer -> Flushable[arrowhead="onormal", style="dashed"];
FileWriter [shape="record"
label="{FileWriter||+FileWriter(String) : void\l
+FileWriter(String,boolean) : void\l
+FileWriter(File) : void\l
+FileWriter(File,boolean) : void\l
+FileWriter(FileDescriptor) : void\l
}"
];
FileWriter -> OutputStreamWriter[arrowhead="onormal", style="solid"];
}