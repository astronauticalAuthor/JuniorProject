digraph G{
 rankdir=BT;
ClassDeclarationVisitor [shape="record"
label="{ClassDeclarationVisitor|+currentClass : IClass\l
+classes : String[]\l
|+ClassDeclarationVisitor(int,IClass,String[]) : void\l
+ClassDeclarationVisitor(int,IClass) : void\l
+visit(int,int,String,String,String,String[]) : void\l
}"
];
ClassDeclarationVisitor -> ClassVisitor[arrowhead="onormal", style="solid"];
ClassDeclarationVisitor -> IClass[arrowhead="ovee", style="solid"];
ClassDeclarationVisitor -> ExtendArrow[arrowhead="ovee", style="dashed"];
ClassDeclarationVisitor -> ImplArrow[arrowhead="ovee", style="dashed"];
ClassFieldVisitor [shape="record"
label="{ClassFieldVisitor|+currentClass : IClass\l
+currentField : IField\l
+classes : String[]\l
|+ClassFieldVisitor(int,ClassVisitor,IClass,String[]) : void\l
+ClassFieldVisitor(int,ClassDeclarationVisitor,IClass) : void\l
+visitField(int,String,String,String,Object) : FieldVisitor\l
}"
];
ClassFieldVisitor -> ClassVisitor[arrowhead="onormal", style="solid"];
ClassFieldVisitor -> IClass[arrowhead="ovee", style="solid"];
ClassFieldVisitor -> IField[arrowhead="ovee", style="solid"];
ClassFieldVisitor -> ClassDeclarationVisitor[arrowhead="ovee", style="dashed"];
ClassFieldVisitor -> Field[arrowhead="ovee", style="dashed"];
ClassFieldVisitor -> AssocArrow[arrowhead="ovee", style="dashed"];
ClassMethodVisitor [shape="record"
label="{ClassMethodVisitor|+currentClass : IClass\l
+currentMethod : IMethod\l
+classes : String[]\l
+methodInformation : MethodInformation\l
level : int\l
|+ClassMethodVisitor(int,ClassVisitor,IClass,String[]) : void\l
+ClassMethodVisitor(int,ClassVisitor,ClassRep,MethodInformation,int) : void\l
+ClassMethodVisitor(int,ClassVisitor,IClass) : void\l
+visitMethod(int,String,String,String,String[]) : MethodVisitor\l
}"
];
ClassMethodVisitor -> ClassVisitor[arrowhead="onormal", style="solid"];
ClassMethodVisitor -> IClass[arrowhead="ovee", style="solid"];
ClassMethodVisitor -> IMethod[arrowhead="ovee", style="solid"];
ClassMethodVisitor -> ClassRep[arrowhead="ovee", style="dashed"];
ClassMethodVisitor -> Method[arrowhead="ovee", style="dashed"];
ClassMethodVisitor -> MethodTraverser[arrowhead="ovee", style="dashed"];
DesignParser [shape="record"
label="{DesignParser||+DesignParser() : void\l
+main(String[]) : void\l
}"
];
DesignParser -> MyWrapper[arrowhead="ovee", style="dashed"];
DesignParser -> ClassRep[arrowhead="ovee", style="dashed"];
DesignParser -> ClassDeclarationVisitor[arrowhead="ovee", style="dashed"];
DesignParser -> ClassFieldVisitor[arrowhead="ovee", style="dashed"];
DesignParser -> ClassMethodVisitor[arrowhead="ovee", style="dashed"];
DesignParser -> IWrapper[arrowhead="ovee", style="dashed"];
DesignParser -> DetectSingleton[arrowhead="ovee", style="dashed"];
DesignParser -> DetectAdapter[arrowhead="ovee", style="dashed"];
DesignParser -> DetectDecorator[arrowhead="ovee", style="dashed"];
DesignParser -> Generator[arrowhead="ovee", style="dashed"];
MethodTraverser [shape="record"
label="{MethodTraverser|+currentMethod : IMethod\l
+currentClass : IClass\l
+classes : String[]\l
|+MethodTraverser(int,Method) : void\l
+MethodTraverser(int,MethodVisitor,IClass,IMethod,String[]) : void\l
+visitMethodInsn(int,String,String,String,boolean) : void\l
}"
];
MethodTraverser -> MethodVisitor[arrowhead="onormal", style="solid"];
MethodTraverser -> IMethod[arrowhead="ovee", style="solid"];
MethodTraverser -> IClass[arrowhead="ovee", style="solid"];
MethodTraverser -> Method[arrowhead="ovee", style="dashed"];
MethodTraverser -> UseArrow[arrowhead="ovee", style="dashed"];
AdapteeBehavior [shape="record"
label="{AdapteeBehavior||+AdapteeBehavior() : void\l
+initRecord(String,PrintWriter,IClass) : void\l
+recMods(PrintWriter) : void\l
+secondaryLabel(PrintWriter) : void\l
}"
];
AdapteeBehavior -> RecordBehavior[arrowhead="onormal", style="dashed"];
AdapterBehavior [shape="record"
label="{AdapterBehavior||+AdapterBehavior() : void\l
+initRecord(String,PrintWriter,IClass) : void\l
+recMods(PrintWriter) : void\l
+secondaryLabel(PrintWriter) : void\l
}"
];
AdapterBehavior -> RecordBehavior[arrowhead="onormal", style="dashed"];
ComponentBehavior [shape="record"
label="{ComponentBehavior||+ComponentBehavior() : void\l
+initRecord(String,PrintWriter,IClass) : void\l
+recMods(PrintWriter) : void\l
+secondaryLabel(PrintWriter) : void\l
}"
];
ComponentBehavior -> RecordBehavior[arrowhead="onormal", style="dashed"];
DecoratorBehavior [shape="record"
label="{DecoratorBehavior||+DecoratorBehavior() : void\l
+initRecord(String,PrintWriter,IClass) : void\l
+recMods(PrintWriter) : void\l
+secondaryLabel(PrintWriter) : void\l
}"
];
DecoratorBehavior -> RecordBehavior[arrowhead="onormal", style="dashed"];
InterfaceBehavior [shape="record"
label="{InterfaceBehavior|+recBehaviors : RecordBehaviorMap\l
|<clinit>() : void\l
+InterfaceBehavior() : void\l
+initRecord(String,PrintWriter,IClass) : void\l
+recMods(PrintWriter) : void\l
+secondaryLabel(PrintWriter) : void\l
}"
];
InterfaceBehavior -> RecordBehavior[arrowhead="onormal", style="dashed"];
InterfaceBehavior -> RecordBehaviorMap[arrowhead="ovee", style="solid"];
NormBehavior [shape="record"
label="{NormBehavior||+NormBehavior() : void\l
+initRecord(String,PrintWriter,IClass) : void\l
+recMods(PrintWriter) : void\l
+secondaryLabel(PrintWriter) : void\l
}"
];
NormBehavior -> RecordBehavior[arrowhead="onormal", style="dashed"];
SingletonBehavior [shape="record"
label="{SingletonBehavior||+SingletonBehavior() : void\l
+initRecord(String,PrintWriter,IClass) : void\l
+recMods(PrintWriter) : void\l
+secondaryLabel(PrintWriter) : void\l
}"
];
SingletonBehavior -> RecordBehavior[arrowhead="onormal", style="dashed"];
TargetBehavior [shape="record"
label="{TargetBehavior||+TargetBehavior() : void\l
+initRecord(String,PrintWriter,IClass) : void\l
+recMods(PrintWriter) : void\l
+secondaryLabel(PrintWriter) : void\l
}"
];
TargetBehavior -> RecordBehavior[arrowhead="onormal", style="dashed"];
AssocArrow [shape="record"
label="{AssocArrow|+sourceClass : String\l
+destinClass : String\l
+selfType : String\l
+additionalProps : String\l
|+AssocArrow() : void\l
+setSource(String) : void\l
+setDestination(String) : void\l
+toString() : String\l
+getSource() : String\l
+getDest() : String\l
+getSelf() : String\l
+addProperty(String) : void\l
}"
];
AssocArrow -> IArrow[arrowhead="onormal", style="dashed"];
ExtendArrow [shape="record"
label="{ExtendArrow|+sourceClass : String\l
+destinClass : String\l
+selfType : String\l
+additionalProps : String\l
|+ExtendArrow() : void\l
+setSource(String) : void\l
+setDestination(String) : void\l
+toString() : String\l
+getSource() : String\l
+getDest() : String\l
+getSelf() : String\l
+addProperty(String) : void\l
}"
];
ExtendArrow -> IArrow[arrowhead="onormal", style="dashed"];
ImplArrow [shape="record"
label="{ImplArrow|+sourceClass : String\l
+destinClass : String\l
+selfType : String\l
+additionalProps : String\l
|+ImplArrow() : void\l
+setSource(String) : void\l
+setDestination(String) : void\l
+toString() : String\l
+getSource() : String\l
+getDest() : String\l
+getSelf() : String\l
+addProperty(String) : void\l
}"
];
ImplArrow -> IArrow[arrowhead="onormal", style="dashed"];
UseArrow [shape="record"
label="{UseArrow|+sourceClass : String\l
+destinClass : String\l
+selfType : String\l
+additionalProps : String\l
|+UseArrow() : void\l
+setSource(String) : void\l
+setDestination(String) : void\l
+toString() : String\l
+getSource() : String\l
+getDest() : String\l
+getSelf() : String\l
+addProperty(String) : void\l
}"
];
UseArrow -> IArrow[arrowhead="onormal", style="dashed"];
ClassRep [shape="record"
label="{ClassRep|-className : String\l
-superClassName : String\l
-methods : ArrayList\l
-fields : ArrayList\l
-interfaces : ArrayList\l
-special : String\l
-arrows : ArrayList\l
-special2 : String\l
|+ClassRep() : void\l
+addMethod(IMethod) : void\l
+addField(IField) : void\l
+setName(String) : void\l
+setSuper(String) : void\l
+setInterfaces(String[]) : void\l
+getFields() : ArrayList\l
+getMethods() : ArrayList\l
+getInterfaces() : ArrayList\l
+getName() : String\l
+getSuper() : String\l
+setSpecial(String) : void\l
+getSpecial() : String\l
+getSpecial2() : String\l
+addArrow(IArrow) : void\l
+getArrows() : ArrayList\l
+accept(IVisitor) : void\l
}"
];
ClassRep -> IClass[arrowhead="onormal", style="dashed"];
ClassRep -> IMethod[arrowhead="ovee", style="solid"];
ClassRep -> IField[arrowhead="ovee", style="solid"];
ClassRep -> IArrow[arrowhead="ovee", style="solid"];
ClassRep -> IVisitor[arrowhead="ovee", style="dashed"];
ClassRep -> ITraverser[arrowhead="ovee", style="dashed"];
Field [shape="record"
label="{Field|-fieldName : String\l
-fieldType : String\l
-access : String\l
-sign : String\l
-moreAccess : int\l
|+Field() : void\l
+setName(String) : void\l
+setType(String) : void\l
+setAccess(String) : void\l
+getName() : String\l
+getType() : String\l
+getAccess() : String\l
+setSignature(String) : void\l
+getSignature() : String\l
+accept(IVisitor) : void\l
+setAdditionalAccess(int) : void\l
+getAdditionalAccess() : int\l
}"
];
Field -> IField[arrowhead="onormal", style="dashed"];
Field -> IVisitor[arrowhead="ovee", style="dashed"];
Generator [shape="record"
label="{Generator|+recBehaviors : RecordBehaviorMap\l
|<clinit>() : void\l
+Generator() : void\l
+generateUML(IWrapper) : void\l
-destTest(IArrow) : boolean\l
}"
];
Generator -> RecordBehaviorMap[arrowhead="ovee", style="solid"];
Generator -> IWrapper[arrowhead="ovee", style="dashed"];
Generator -> RecordBehavior[arrowhead="ovee", style="dashed"];
Method [shape="record"
label="{Method|-methodName : String\l
-methodType : String\l
-parameters : ArrayList\l
-returnType : String\l
-access : String\l
-moreInfo : ArrayList\l
-moreAccess : int\l
|+Method() : void\l
+setName(String) : void\l
+setType(String) : void\l
+setReturnType(String) : void\l
+addParameter(String) : void\l
+getName() : String\l
+getType() : String\l
+getParameters() : ArrayList\l
+getReturnType() : String\l
+setAccess(String) : void\l
+getAccess() : String\l
+addInfo(MethodInformation) : void\l
+getInfo() : ArrayList\l
+accept(IVisitor) : void\l
+setAdditionalAccess(int) : void\l
+getAdditionalAccess() : int\l
}"
];
Method -> IMethod[arrowhead="onormal", style="dashed"];
Method -> IVisitor[arrowhead="ovee", style="dashed"];
MyWrapper [shape="record"
label="{MyWrapper|+classes : ArrayList\l
|+MyWrapper() : void\l
+accept(IVisitor) : void\l
+addClass(IClass) : void\l
+getClasses() : ArrayList\l
}"
];
MyWrapper -> IWrapper[arrowhead="onormal", style="dashed"];
MyWrapper -> IClass[arrowhead="ovee", style="solid"];
MyWrapper -> IVisitor[arrowhead="ovee", style="dashed"];
MyWrapper -> ITraverser[arrowhead="ovee", style="dashed"];
RecordBehaviorMap [shape="record"
label="{RecordBehaviorMap|+behaviors : Map\l
|+RecordBehaviorMap() : void\l
+getBeh(String) : RecordBehavior\l
}"
];
RecordBehaviorMap -> NormBehavior[arrowhead="ovee", style="dashed"];
RecordBehaviorMap -> InterfaceBehavior[arrowhead="ovee", style="dashed"];
RecordBehaviorMap -> SingletonBehavior[arrowhead="ovee", style="dashed"];
RecordBehaviorMap -> AdapterBehavior[arrowhead="ovee", style="dashed"];
RecordBehaviorMap -> AdapteeBehavior[arrowhead="ovee", style="dashed"];
RecordBehaviorMap -> TargetBehavior[arrowhead="ovee", style="dashed"];
RecordBehaviorMap -> ComponentBehavior[arrowhead="ovee", style="dashed"];
RecordBehaviorMap -> DecoratorBehavior[arrowhead="ovee", style="dashed"];
Visitor [shape="record"
label="{Visitor|keyToMethodMap : Map\l
|+Visitor() : void\l
+preVisit(ITraverser) : void\l
+visit(ITraverser) : void\l
+postVisit(ITraverser) : void\l
+addVisit(VisitType,Class,ICommand) : void\l
+removeVisit(VisitType,Class) : void\l
}"
];
Visitor -> IVisitor[arrowhead="onormal", style="dashed"];
Visitor -> ITraverser[arrowhead="ovee", style="dashed"];
Visitor -> VisitType[arrowhead="ovee", style="dashed"];
DetectAdapter [shape="record"
label="{DetectAdapter|-visitor : IVisitor\l
-classes : ArrayList\l
-curClass : IClass\l
-superClass : String\l
-uniFieldClass : IClass\l
-triples : ArrayList\l
|+DetectAdapter() : void\l
-fieldVisit() : void\l
-methodVisit() : void\l
-classVisit() : void\l
+detect(IWrapper) : void\l
+setupPreVisit() : void\l
+postVisit() : void\l
-lambda$0(ITraverser) : void\l
-lambda$1(ITraverser) : void\l
-lambda$2(ITraverser) : void\l
-lambda$3(ITraverser) : void\l
-lambda$4(ITraverser) : void\l
}"
];
DetectAdapter -> IDetector[arrowhead="onormal", style="dashed"];
DetectAdapter -> IVisitor[arrowhead="ovee", style="solid"];
DetectAdapter -> IClass[arrowhead="ovee", style="solid"];
DetectAdapter -> Visitor[arrowhead="ovee", style="dashed"];
DetectAdapter -> IWrapper[arrowhead="ovee", style="dashed"];
DetectAdapter -> ITraverser[arrowhead="ovee", style="dashed"];
DetectDecorator [shape="record"
label="{DetectDecorator|-visitor : IVisitor\l
-currentClass : IClass\l
-interfaces : ArrayList\l
-currentSuper : String\l
-isAbstract : boolean\l
-isDecorator : boolean\l
-decorators : ArrayList\l
-components : ArrayList\l
|+DetectDecorator() : void\l
-visitField() : void\l
+setupPreVisit() : void\l
+detect(IWrapper) : void\l
+postVisit() : void\l
-lambda$0(ITraverser) : void\l
-lambda$1(ITraverser) : void\l
-lambda$2(ITraverser) : void\l
}"
];
DetectDecorator -> IDetector[arrowhead="onormal", style="dashed"];
DetectDecorator -> IVisitor[arrowhead="ovee", style="solid"];
DetectDecorator -> IClass[arrowhead="ovee", style="solid"];
DetectDecorator -> Visitor[arrowhead="ovee", style="dashed"];
DetectDecorator -> ITraverser[arrowhead="ovee", style="dashed"];
DetectDecorator -> IWrapper[arrowhead="ovee", style="dashed"];
DetectSingleton [shape="record"
label="{DetectSingleton|-visitor : IVisitor\l
-curClass : IClass\l
-methodInstance : boolean\l
-fieldInstance : boolean\l
|+DetectSingleton() : void\l
-fieldVisit() : void\l
-methodVisit() : void\l
+detect(IWrapper) : void\l
+setupPreVisit() : void\l
+postVisit() : void\l
-lambda$0(ITraverser) : void\l
-lambda$1(ITraverser) : void\l
-lambda$2(ITraverser) : void\l
-lambda$3(ITraverser) : void\l
}"
];
DetectSingleton -> IDetector[arrowhead="onormal", style="dashed"];
DetectSingleton -> IVisitor[arrowhead="ovee", style="solid"];
DetectSingleton -> IClass[arrowhead="ovee", style="solid"];
DetectSingleton -> Visitor[arrowhead="ovee", style="dashed"];
DetectSingleton -> ITraverser[arrowhead="ovee", style="dashed"];
DetectSingleton -> IWrapper[arrowhead="ovee", style="dashed"];
DetectSingleton -> AssocArrow[arrowhead="ovee", style="dashed"];
IArrow [shape="record"
label="{\<\<interface\>\>\nIArrow|
|+setSource(String) : void\l
+setDestination(String) : void\l
+toString() : String\l
+getSource() : String\l
+getDest() : String\l
+getSelf() : String\l
+addProperty(String) : void\l
}"
];
IClass [shape="record"
label="{\<\<interface\>\>\nIClass|
|+addMethod(IMethod) : void\l
+addField(IField) : void\l
+setName(String) : void\l
+setSuper(String) : void\l
+setInterfaces(String[]) : void\l
+getName() : String\l
+getSuper() : String\l
+getFields() : ArrayList\l
+getMethods() : ArrayList\l
+getInterfaces() : ArrayList\l
+addArrow(IArrow) : void\l
+getArrows() : ArrayList\l
+setSpecial(String) : void\l
+getSpecial() : String\l
+getSpecial2() : String\l
}"
];
IClass -> ITraverser[arrowhead="onormal", style="dashed"];
IDetector [shape="record"
label="{\<\<interface\>\>\nIDetector|
|+detect(IWrapper) : void\l
+setupPreVisit() : void\l
+postVisit() : void\l
}"
];
IField [shape="record"
label="{\<\<interface\>\>\nIField|
|+setName(String) : void\l
+setType(String) : void\l
+setAccess(String) : void\l
+getName() : String\l
+getType() : String\l
+getAccess() : String\l
+setSignature(String) : void\l
+getSignature() : String\l
+setAdditionalAccess(int) : void\l
+getAdditionalAccess() : int\l
}"
];
IField -> ITraverser[arrowhead="onormal", style="dashed"];
IMethod [shape="record"
label="{\<\<interface\>\>\nIMethod|
|+setName(String) : void\l
+setType(String) : void\l
+setReturnType(String) : void\l
+addParameter(String) : void\l
+getName() : String\l
+getType() : String\l
+getParameters() : ArrayList\l
+getReturnType() : String\l
+setAccess(String) : void\l
+getAccess() : String\l
+addInfo(MethodInformation) : void\l
+getInfo() : ArrayList\l
+setAdditionalAccess(int) : void\l
+getAdditionalAccess() : int\l
}"
];
IMethod -> ITraverser[arrowhead="onormal", style="dashed"];
ITraverser [shape="record"
label="{\<\<interface\>\>\nITraverser|
|+accept(IVisitor) : void\l
}"
];
IVisitor [shape="record"
label="{\<\<interface\>\>\nIVisitor|
|+preVisit(ITraverser) : void\l
+visit(ITraverser) : void\l
+postVisit(ITraverser) : void\l
+addVisit(VisitType,Class,ICommand) : void\l
+removeVisit(VisitType,Class) : void\l
}"
];
IWrapper [shape="record"
label="{\<\<interface\>\>\nIWrapper|
|+addClass(IClass) : void\l
+getClasses() : ArrayList\l
}"
];
IWrapper -> ITraverser[arrowhead="onormal", style="dashed"];
RecordBehavior [shape="record"
label="{\<\<interface\>\>\nRecordBehavior|
|+initRecord(String,PrintWriter,IClass) : void\l
+recMods(PrintWriter) : void\l
+secondaryLabel(PrintWriter) : void\l
}"
];
VisitType [shape="record"
color="blue"
label="{VisitType\n\<\<Singleton\>\>|
+PREVISIT : VisitType\l
+VISIT : VisitType\l
+POSTVISIT : VisitType\l
-ENUM$VALUES : VisitType[]\l
|<clinit>() : void\l
-VisitType(String,int) : void\l
+values() : VisitType[]\l
+valueOf(String) : VisitType\l
}"
];
VisitType -> Enum[arrowhead="onormal", style="solid"];
VisitType -> VisitType[arrowhead="ovee", style="solid"];
}